input {
	udp {
                #add_field => {"myid"=>"syslog"}
		port => 5140
		type => syslog
	}
}

filter {
    if [type] == "syslog" {
        #使用grok匹配pattern
        grok {      
              match => [
                       "message", "<%{NUMBER:syslogIndex}>date=%{YEAR:year}\-%{MONTHNUM:month}\-%{MONTHDAY:day} time=%{TIME:time} devname=%{HOSTNAME:devName} devid=%{HOSTNAME:devId} logid=%{NUMBER:logId} type=%{WORD:logType} subtype=%{WORD:logSubType} level=%{WORD:level} vd=%{WORD:virtualDomain} srcip=%{IP:srcIP} srcport=%{NUMBER:srcPort} srcintf=%{DATA:srcInterface} dstip=%{IP:dstIP} dstport=%{NUMBER:dstPort} dstintf=%{DATA:dstInterface} poluuid=%{DATA:uuid} sessionid=%{INT:sessionId} proto=%{INT:protocol} action=%{DATA:action} policyid=%{INT:policyId} policytype=%{WORD:policyType} appcat=%{DATA:appCat} crscore=%{INT:score} craction=%{INT:craction} crlevel=%{WORD:level}",
                       "message", "<%{NUMBER:syslogIndex}>date=%{YEAR:year}\-%{MONTHNUM:month}\-%{MONTHDAY:day} time=%{TIME:time} devname=%{HOSTNAME:devName} devid=%{HOSTNAME:devId} logid=%{NUMBER:logId} type=%{WORD:logType} subtype=%{WORD:logSubType} level=%{WORD:level} vd=%{WORD:virtualDomain} srcip=%{IP:srcIP} srcport=%{NUMBER:srcPort} srcintf=%{DATA:srcInterface} dstip=%{IP:dstIP} dstport=%{NUMBER:dstPort} dstintf=%{DATA:dstInterface} poluuid=%{DATA:uuid} sessionid=%{INT:sessionId} proto=%{INT:protocol} action=%{DATA:action} user=%{DATA:user}",
                      "message", "<%{NUMBER:syslogIndex}>date=%{YEAR:year}\-%{MONTHNUM:month}\-%{MONTHDAY:day} time=%{TIME:time} devname=%{HOSTNAME:devName} devid=%{HOSTNAME:devId} logid=%{NUMBER:logId} type=%{WORD:logType} subtype=%{WORD:logSubType} level=%{WORD:level} vd=%{WORD:virtualDomain} srcip=%{IP:srcIP} srcport=%{NUMBER:srcPort} srcintf=%{DATA:srcInterface} dstip=%{IP:dstIP} dstport=%{NUMBER:dstPort} dstintf=%{DATA:dstInterface} poluuid=%{DATA:uuid} sessionid=%{INT:sessionId} proto=%{INT:protocol} action=%{DATA:action} policyid=%{INT:policyId} policytype=%{WORD:policyType} appid=%{NUMBER:appId} app=%{DATA:app} appcat=%{DATA:appCat} apprisk=%{WORD:appRisk} applist=%{DATA:appList} utmaction=%{WORD:utmAction} countapp=%{INT:countApp} crscore=%{INT:score} craction=%{INT:craction}"
             ]
        }
        #新增欄位logTime,替換字符
        mutate {
           add_field => {
               "logTime" => "%{year}-%{month}-%{day} %{time}"
           }
           gsub => [
             "srcInterface", "\"", "",
             "dstInterface", "\"", "",
             "action", "\"", ""
           ]
       }
       #匹配logTime,移除欄位
       date {
            match => ["logTime", "YYYY-MM-dd HH:mm:ss"]
            timezone => "Etc/GMT-8"
            remove_field => ["logTime", "year", "month", "day", "time", "msg"]
       }
    }
}

output {

}
